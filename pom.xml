<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>iit.ase.cw</groupId>
  <artifactId>platform-common</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>platform-common</name>
  <description>Platform Common</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <java.version>17</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.9.1</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <!-- <optional>true</optional> -->
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.11</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!--
    When managing dependencies via commonly implemented libraries, can not set optional to true.
    If we set it to true, final jar will not include that particular dependency. In above case
    If we set optional to true, final platform-common.jar will not have lombok classes. At the same time,
    if we remove optional true, lombok will be bundle as run time dependency. Actually, lombok is not
    run time dependency. How we handle this ?
    There should be another mechenisum to manage common dependencies like 'lombok' with maven projects.
    -->

  </dependencies>

  <dependencyManagement>
    <dependencies>

    </dependencies>
  </dependencyManagement>

</project>
